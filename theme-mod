#!/bin/bash

# an array of configuration files that are to 
# be modified by the script
CONFIGS=( 
"/home/$USER/.config/i3/config" 
"/home/$USER/.config/i3/i3blocks.conf" 
"/home/$USER/.config/alacritty/alacritty.yml" 
"/home/$USER/.moc/themes/transparent-background" 
"/home/$USER/.config/vis/colors/custom" 
"/home/$USER/.config/dunst/dunstrc")

#CONFIGS=( 
#"/home/$USER/.config/alacritty/alacritty.yml")

# default directory with images
# DEFAULT_DIR="/media/$USER/mediadisk/images/wallpapers/Landscapes"
DEFAULT_DIR="/media/$USER/mediadisk/images/wallpapers"

# variable for holding the image
# to be used for system theming
# (random by default)
# IMG="$DEFAULT_DIR/$(ls $DEFAULT_DIR | shuf -n 1)"
IMG="$(find $DEFAULT_DIR -type f -name '*.jpg' -o -name '*.png' | shuf -n 1)"

# if the argument was not given - 
# count it as a user wanting to
# choose a wallpaper at random
# from a default folder 
# set in 'DEFAULT_DIR' variable

echo -e "\n==========\n"

# check if all the specified configuration 
# and template files exit on the system
for config in "${CONFIGS[@]}"
do
  config_name="$(echo $config | rev | sed 's/\/.*//' | rev)"
  [ -f "$config" ] && echo "$config_name FOUND" || { echo "$config_name NOT FOUND"; exit 1; }
  [ -f "${config}.tmp" ] && echo "${config_name}.tmp FOUND" || { echo "${config_name}.tmp NOT FOUND"; exit 1; }
done

echo -e "\n==========\n"

# check if any path to an image was given
# as an argument and if yes - if it exists
if [ "$1" != "" -a -f "$1" ]
then
  IMG="$1"
  echo "$IMG will be used"
else
  echo "Choosing a random image from default directory..."
  echo "$IMG will be used"
fi

echo -e "\n==========\n"

# clear the wallpaper from the last script usage
# (delete all images that have 'wal' as their name)
rm /home/$USER/wal.*

echo -e "Clear the wallpaper..."

# copy the chosen image to home wirectory
# and rename it to wal
echo "Copying the image to home..."
cp "$IMG" "/home/$USER/wal.$(echo $IMG | rev | sed 's/\..*//' | rev)"

# clear the colorscheme from the last script usage
# (delete all the ones that have 'wal' in their name)
[ "$(ls /home/$USER/.cache/wal/schemes/)" = "" ] || rm /home/$USER/.cache/wal/schemes/*wal*

echo -e "Clear the colorscheme...\n"

# use pywal to theme the system based on the given image
wal -i "/home/$USER/wal.$(echo $IMG | rev | sed 's/\..*//' | rev)"

echo -e "\n==========\n"

# get the color scheme file generated by pywal 
pywal_file="/home/$USER/.cache/wal/schemes/$(ls /home/$USER/.cache/wal/schemes | grep "_home_$(whoami)_wal_$(ls /home/$USER/ | grep -w wal | rev | sed 's/\..*//' | rev)")"

echo "$pywal_file"

# an array to store eight generated colors by pywal
# (color0 - color7)
colorscheme=()

# color0
colorscheme[0]="$(cat $pywal_file | grep -w "color0" | sed 's/.*#//' | sed 's/",//')"
# color1
colorscheme[1]="$(cat $pywal_file | grep -w "color1" | sed 's/.*#//' | sed 's/",//')"
# color2
colorscheme[2]="$(cat $pywal_file | grep -w "color2" | sed 's/.*#//' | sed 's/",//')"
# color3
colorscheme[3]="$(cat $pywal_file | grep -w "color3" | sed 's/.*#//' | sed 's/",//')"
# color4
colorscheme[4]="$(cat $pywal_file | grep -w "color4" | sed 's/.*#//' | sed 's/",//')"
# color5
colorscheme[5]="$(cat $pywal_file | grep -w "color5" | sed 's/.*#//' | sed 's/",//')"
# color6
colorscheme[6]="$(cat $pywal_file | grep -w "color6" | sed 's/.*#//' | sed 's/",//')"
# color7
colorscheme[7]="$(cat $pywal_file | grep -w "color7" | sed 's/.*#//' | sed 's/",//')"

echo "Generated colors:"

for color in "${colorscheme[@]}"
do
  echo "$color"
done

echo -e "\n==========\n"

# copy and modify the template file in the given config directory,
# replacing the 000,111...777 colors with the newly generated ones
for config in "${CONFIGS[@]}"
do
  echo "${config}.tmp"
  cp "${config}.tmp" "${config}.tmp1"
  echo "${config}.tmp1"

  sed -i -- "s/\<000\>/${colorscheme[0]}/g" ${config}.tmp1
  echo -e "\n000 -> ${colorscheme[0]}"

  sed -i -- "s/\<111\>/${colorscheme[1]}/g" ${config}.tmp1
  echo -e "111 -> ${colorscheme[1]}"
 
  sed -i -- "s/\<222\>/${colorscheme[2]}/g" ${config}.tmp1
  echo -e "222 -> ${colorscheme[2]}"

  sed -i -- "s/\<333\>/${colorscheme[3]}/g" ${config}.tmp1
  echo -e "333 -> ${colorscheme[3]}"

  sed -i -- "s/\<444\>/${colorscheme[4]}/g" ${config}.tmp1
  echo -e "444 -> ${colorscheme[4]}"

  sed -i -- "s/\<555\>/${colorscheme[5]}/g" ${config}.tmp1
  echo -e "555 -> ${colorscheme[5]}"

  sed -i -- "s/\<666\>/${colorscheme[6]}/g" ${config}.tmp1
  echo -e "666 -> ${colorscheme[6]}"

  sed -i -- "s/\<777\>/${colorscheme[7]}/g" ${config}.tmp1
  echo -e "777 -> ${colorscheme[7]}"

  cp "$config" "${config}.backup"
  echo -e "\n${config}.backup"

  rm "$config"

  mv "${config}.tmp1" "$config"
  echo -e "$config - modification SUCCESSFUL\n"
done

# reset notification deamon
killall dunst
notify-send "Theme was changed!!!"
